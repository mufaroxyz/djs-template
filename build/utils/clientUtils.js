Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"ClientUtils",{enumerable:true,get:()=>ClientUtils});const _discordJs=require("discord.js");const _index=require("./index");const FETCH_MEMBER_LIMIT=20;const IGNORED_ERRORS=[_discordJs.RESTJSONErrorCodes.UnknownMessage,_discordJs.RESTJSONErrorCodes.UnknownChannel,_discordJs.RESTJSONErrorCodes.UnknownGuild,_discordJs.RESTJSONErrorCodes.UnknownMember,_discordJs.RESTJSONErrorCodes.UnknownUser,_discordJs.RESTJSONErrorCodes.UnknownInteraction,_discordJs.RESTJSONErrorCodes.MissingAccess];class ClientUtils{static async getGuild(client,discordId){discordId=_index.RegexUtils.discordId(discordId);if(!discordId){return}try{return await client.guilds.fetch(discordId)}catch(error){if(error instanceof _discordJs.DiscordAPIError&&typeof error.code=="number"&&IGNORED_ERRORS.includes(error.code)){return}else{throw error}}}static async getChannel(client,discordId){discordId=_index.RegexUtils.discordId(discordId);if(!discordId){return}try{return await client.channels.fetch(discordId)}catch(error){if(error instanceof _discordJs.DiscordAPIError&&typeof error.code=="number"&&IGNORED_ERRORS.includes(error.code)){return}else{throw error}}}static async getUser(client,discordId){discordId=_index.RegexUtils.discordId(discordId);if(!discordId){return}try{return await client.users.fetch(discordId)}catch(error){if(error instanceof _discordJs.DiscordAPIError&&typeof error.code=="number"&&IGNORED_ERRORS.includes(error.code)){return}else{throw error}}}static async findAppCommand(client,name){let commands=await client.application.commands.fetch();return commands.find(command=>command.name===name)}static async findMember(guild,input){try{let discordId=_index.RegexUtils.discordId(input);if(discordId){return await guild.members.fetch(discordId)}let tag=_index.RegexUtils.tag(input);if(tag){return(await guild.members.fetch({query:tag.username,limit:FETCH_MEMBER_LIMIT})).find(member=>member.user.discriminator===tag.discriminator)}return(await guild.members.fetch({query:input,limit:1})).first()}catch(error){if(error instanceof _discordJs.DiscordAPIError&&typeof error.code=="number"&&IGNORED_ERRORS.includes(error.code)){return}else{throw error}}}static async findRole(guild,input){try{let discordId=_index.RegexUtils.discordId(input);if(discordId){return await guild.roles.fetch(discordId)}let search=input.trim().toLowerCase().replace(/^@/,"");let roles=await guild.roles.fetch();return roles.find(role=>role.name.toLowerCase()===search)??roles.find(role=>role.name.toLowerCase().includes(search))}catch(error){if(error instanceof _discordJs.DiscordAPIError&&typeof error.code=="number"&&IGNORED_ERRORS.includes(error.code)){return}else{throw error}}}static async findTextChannel(guild,input){try{let discordId=_index.RegexUtils.discordId(input);if(discordId){let channel=await guild.channels.fetch(discordId);if(channel instanceof _discordJs.NewsChannel||channel instanceof _discordJs.TextChannel){return channel}else{return}}let search=input.trim().toLowerCase().replace(/^#/,"").replaceAll(" ","-");let channels=[...(await guild.channels.fetch()).values()].filter(channel=>channel instanceof _discordJs.NewsChannel||channel instanceof _discordJs.TextChannel).map(channel=>channel);return channels.find(channel=>channel.name.toLowerCase()===search)??channels.find(channel=>channel.name.toLowerCase().includes(search))}catch(error){if(error instanceof _discordJs.DiscordAPIError&&typeof error.code=="number"&&IGNORED_ERRORS.includes(error.code)){return}else{throw error}}}static async findVoiceChannel(guild,input){try{let discordId=_index.RegexUtils.discordId(input);if(discordId){let channel=await guild.channels.fetch(discordId);if(channel instanceof _discordJs.VoiceChannel||channel instanceof _discordJs.StageChannel){return channel}else{return}}let search=input.trim().toLowerCase().replace(/^#/,"");let channels=[...(await guild.channels.fetch()).values()].filter(channel=>channel instanceof _discordJs.VoiceChannel||channel instanceof _discordJs.StageChannel).map(channel=>channel);return channels.find(channel=>channel.name.toLowerCase()===search)??channels.find(channel=>channel.name.toLowerCase().includes(search))}catch(error){if(error instanceof _discordJs.DiscordAPIError&&typeof error.code=="number"&&IGNORED_ERRORS.includes(error.code)){return}else{throw error}}}static async findNotifyChannel(guild){let systemChannel=guild.systemChannel;if(systemChannel&&_index.PermissionUtils.canSend(systemChannel,true)){return systemChannel}return(await guild.channels.fetch()).find(channel=>(channel instanceof _discordJs.TextChannel||channel instanceof _discordJs.NewsChannel)&&_index.PermissionUtils.canSend(channel,true))}}
//# sourceMappingURL=clientUtils.js.map