{"version":3,"sources":["../../src/utils/permissionUtils.ts"],"sourcesContent":["import { Channel, DMChannel, GuildChannel, PermissionFlagsBits, ThreadChannel } from 'discord.js';\n\nexport class PermissionUtils {\n    public static canSend(channel: Channel, embedLinks: boolean = false): boolean {\n        if (channel instanceof DMChannel) {\n            return true;\n        } else if (channel instanceof GuildChannel || channel instanceof ThreadChannel) {\n            let channelPerms = channel.permissionsFor(channel.client.user);\n            if (!channelPerms) {\n                // This can happen if the guild disconnected while a collector is running\n                return false;\n            }\n\n            // VIEW_CHANNEL - Needed to view the channel\n            // SEND_MESSAGES - Needed to send messages\n            // EMBED_LINKS - Needed to send embedded links\n            return channelPerms.has([\n                PermissionFlagsBits.ViewChannel,\n                PermissionFlagsBits.SendMessages,\n                ...(embedLinks ? [PermissionFlagsBits.EmbedLinks] : []),\n            ]);\n        } else {\n            return false;\n        }\n    }\n\n    public static canMention(channel: Channel): boolean {\n        if (channel instanceof DMChannel) {\n            return true;\n        } else if (channel instanceof GuildChannel || channel instanceof ThreadChannel) {\n            let channelPerms = channel.permissionsFor(channel.client.user);\n            if (!channelPerms) {\n                // This can happen if the guild disconnected while a collector is running\n                return false;\n            }\n\n            // VIEW_CHANNEL - Needed to view the channel\n            // MENTION_EVERYONE - Needed to mention @everyone, @here, and all roles\n            return channelPerms.has([\n                PermissionFlagsBits.ViewChannel,\n                PermissionFlagsBits.MentionEveryone,\n            ]);\n        } else {\n            return false;\n        }\n    }\n\n    public static canReact(channel: Channel, removeOthers: boolean = false): boolean {\n        if (channel instanceof DMChannel) {\n            return true;\n        } else if (channel instanceof GuildChannel || channel instanceof ThreadChannel) {\n            let channelPerms = channel.permissionsFor(channel.client.user);\n            if (!channelPerms) {\n                // This can happen if the guild disconnected while a collector is running\n                return false;\n            }\n\n            // VIEW_CHANNEL - Needed to view the channel\n            // ADD_REACTIONS - Needed to add new reactions to messages\n            // READ_MESSAGE_HISTORY - Needed to add new reactions to messages\n            //    https://discordjs.guide/popular-topics/permissions-extended.html#implicit-permissions\n            // MANAGE_MESSAGES - Needed to remove others reactions\n            return channelPerms.has([\n                PermissionFlagsBits.ViewChannel,\n                PermissionFlagsBits.AddReactions,\n                PermissionFlagsBits.ReadMessageHistory,\n                ...(removeOthers ? [PermissionFlagsBits.ManageMessages] : []),\n            ]);\n        } else {\n            return false;\n        }\n    }\n\n    public static canPin(channel: Channel, findOld: boolean = false): boolean {\n        if (channel instanceof DMChannel) {\n            return true;\n        } else if (channel instanceof GuildChannel || channel instanceof ThreadChannel) {\n            let channelPerms = channel.permissionsFor(channel.client.user);\n            if (!channelPerms) {\n                // This can happen if the guild disconnected while a collector is running\n                return false;\n            }\n\n            // VIEW_CHANNEL - Needed to view the channel\n            // MANAGE_MESSAGES - Needed to pin messages\n            // READ_MESSAGE_HISTORY - Needed to find old pins\n            return channelPerms.has([\n                PermissionFlagsBits.ViewChannel,\n                PermissionFlagsBits.ManageMessages,\n                ...(findOld ? [PermissionFlagsBits.ReadMessageHistory] : []),\n            ]);\n        } else {\n            return false;\n        }\n    }\n\n    public static canCreateThreads(\n        channel: Channel,\n        manageThreads: boolean = false,\n        findOld: boolean = false\n    ): boolean {\n        if (channel instanceof DMChannel) {\n            return false;\n        } else if (channel instanceof GuildChannel || channel instanceof ThreadChannel) {\n            let channelPerms = channel.permissionsFor(channel.client.user);\n            if (!channelPerms) {\n                // This can happen if the guild disconnected while a collector is running\n                return false;\n            }\n\n            // VIEW_CHANNEL - Needed to view the channel\n            // SEND_MESSAGES_IN_THREADS - Needed to send messages in threads\n            // CREATE_PUBLIC_THREADS - Needed to create public threads\n            // MANAGE_THREADS - Needed to rename, delete, archive, unarchive, slow mode threads\n            // READ_MESSAGE_HISTORY - Needed to find old threads\n            return channelPerms.has([\n                PermissionFlagsBits.ViewChannel,\n                PermissionFlagsBits.SendMessagesInThreads,\n                PermissionFlagsBits.CreatePublicThreads,\n                ...(manageThreads ? [PermissionFlagsBits.ManageThreads] : []),\n                ...(findOld ? [PermissionFlagsBits.ReadMessageHistory] : []),\n            ]);\n        } else {\n            return false;\n        }\n    }\n}"],"names":["PermissionUtils","canSend","channel","embedLinks","DMChannel","GuildChannel","ThreadChannel","channelPerms","permissionsFor","client","user","has","PermissionFlagsBits","ViewChannel","SendMessages","EmbedLinks","canMention","MentionEveryone","canReact","removeOthers","AddReactions","ReadMessageHistory","ManageMessages","canPin","findOld","canCreateThreads","manageThreads","SendMessagesInThreads","CreatePublicThreads","ManageThreads"],"mappings":"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"}