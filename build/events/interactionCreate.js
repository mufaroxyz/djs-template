Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"default",{enumerable:true,get:()=>_default});const _startBot=require("../startBot");const _event=require("../extensions/Event");const _logs=_interopRequireDefault(require("../services/logs"));const _register=_interopRequireDefault(require("../handlers/register"));const _chalk=_interopRequireDefault(require("chalk"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const _default=new _event.Event("interactionCreate",async interaction=>{const timeStr=`${new Date().toLocaleString()}`;if(interaction.isCommand()){const command=_startBot.client.commands.get(interaction.commandName);if(!command)return interaction.followUp("`‚ùå` The command doesn't exist!");command.run({args:interaction.options,client:_startBot.client,interaction:interaction});_logs.default.customLog(`${interaction.user.tag} used ${interaction.commandName} at ${_chalk.default.bold(_chalk.default.greenBright(timeStr))}`,"DiscordSocket:ApplicationCommand")}else if(interaction.isMessageComponent()){_logs.default.customLog(`${interaction.user.tag} used ${interaction.customId} at ${_chalk.default.bold(_chalk.default.greenBright(timeStr))}`,"DiscordSocket:MessageComponent")}else if(interaction.isModalSubmit()){_logs.default.customLog(`${interaction.user.tag} used ${interaction.customId} at ${_chalk.default.bold(_chalk.default.greenBright(timeStr))}`,"DiscordSocket:ModalSubmit");if(interaction.customId==="register"){_register.default.onModalSubmit(interaction)}}});
//# sourceMappingURL=interactionCreate.js.map